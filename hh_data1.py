#autogenerated by sqlautocode

from sqlalchemy import *
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relation

engine = create_engine('sqlite:////tmp/dz.db')
DeclarativeBase = declarative_base()
metadata = DeclarativeBase.metadata
metadata.bind = engine

Batch = Table(u'Batch', metadata,
    Column(u'ID', VARCHAR(length=500)),
    Column(u'NAME', VARCHAR(length=500)),
    Column(u'CLIENT', VARCHAR(length=500)),
)

Client = Table(u'Client', metadata,
    Column(u'ID', VARCHAR(length=500)),
    Column(u'NAME', VARCHAR(length=500)),
    Column(u'INS', VARCHAR(length=500)),
    Column(u'APPROVAL', VARCHAR(length=500)),
    Column(u'DX', VARCHAR(length=500)),
    Column(u'NOTE', VARCHAR(length=500)),
    Column(u'OFFICER', VARCHAR(length=500)),
    Column(u'DOB', VARCHAR(length=500)),
    Column(u'ADDRESS', VARCHAR(length=500)),
    Column(u'PHONE', VARCHAR(length=500)),
    Column(u'PROGRESS_NOTE', VARCHAR(length=500)),
    Column(u'BATCH', VARCHAR(length=500)),
    Column(u'VISIT', VARCHAR(length=500)),
    Column(u'IDX', VARCHAR(length=500)),
)

Group = Table(u'Group', metadata,
    Column(u'ID', VARCHAR(length=500)),
    Column(u'NAME', VARCHAR(length=500)),
    Column(u'RATE', VARCHAR(length=500)),
    Column(u'IDX', VARCHAR(length=500)),
    Column(u'SESSION', VARCHAR(length=500)),
    Column(u'EVAL', VARCHAR(length=500)),
)

Office = Table(u'Office', metadata,
    Column(u'ID', VARCHAR(length=500)),
    Column(u'NAME', VARCHAR(length=500)),
    Column(u'OFFICER', VARCHAR(length=500)),
    Column(u'FAX', VARCHAR(length=500)),
    Column(u'NOTES', VARCHAR(length=500)),
    Column(u'ADDRESS', VARCHAR(length=500)),
)

Officer = Table(u'Officer', metadata,
    Column(u'ID', VARCHAR(length=500)),
    Column(u'NAME', VARCHAR(length=500)),
    Column(u'CLIENT', VARCHAR(length=500)),
    Column(u'EMAIL', VARCHAR(length=500)),
    Column(u'OFFICE', VARCHAR(length=500)),
    Column(u'IDX', VARCHAR(length=500)),
)

Progressnote = Table(u'Progressnote', metadata,
    Column(u'ID', VARCHAR(length=500)),
    Column(u'CLIENT', VARCHAR(length=500)),
    Column(u'SESSION_DATE', VARCHAR(length=500)),
    Column(u'SESSION_DURATION', VARCHAR(length=500)),
    Column(u'NOTES', VARCHAR(length=500)),
    Column(u'SIGNED_BY', VARCHAR(length=500)),
    Column(u'SIGNED_ON', VARCHAR(length=500)),
)

Session = Table(u'Session', metadata,
    Column(u'ID', VARCHAR(length=500)),
    Column(u'DATE', VARCHAR(length=500)),
    Column(u'GROUP', VARCHAR(length=500)),
    Column(u'TIME', VARCHAR(length=500)),
    Column(u'THERAPIST', VARCHAR(length=500)),
    Column(u'VISIT', VARCHAR(length=500)),
    Column(u'IDX', VARCHAR(length=500)),
)

Visit = Table(u'Visit', metadata,
    Column(u'ID', VARCHAR(length=500)),
    Column(u'SESSION', VARCHAR(length=500)),
    Column(u'CLIENT', VARCHAR(length=500)),
    Column(u'ATTEND', VARCHAR(length=500)),
    Column(u'CLIENT_PD', VARCHAR(length=500)),
    Column(u'NOTE', VARCHAR(length=500)),
    Column(u'BILL_DATE', VARCHAR(length=500)),
    Column(u'CHECK_DATE', VARCHAR(length=500)),
    Column(u'INS_PAID_$', VARCHAR(length=500)),
    Column(u'FILEMAKER_KEY', VARCHAR(length=500)),
)

current_clients = Table(u'current_clients', metadata,
    Column(u'id', INTEGER()),
    Column(u'name', TEXT()),
    Column(u'ins', TEXT()),
    Column(u'approval', TEXT()),
    Column(u'DX', TEXT()),
    Column(u'note', TEXT()),
    Column(u'officer', INTEGER()),
    Column(u'DOB', NullType()),
    Column(u'address', TEXT()),
    Column(u'phone', TEXT()),
    Column(u'batch', INTEGER()),
)

current_sessions = Table(u'current_sessions', metadata,
    Column(u'id', INTEGER()),
    Column(u'date', NullType()),
    Column(u'group_id', INTEGER()),
    Column(u'time', TEXT()),
    Column(u'therapist', TEXT()),
)

current_visits = Table(u'current_visits', metadata,
    Column(u'id', INTEGER()),
    Column(u'session', INTEGER()),
    Column(u'client', INTEGER()),
    Column(u'attend', INTEGER()),
    Column(u'client_pd', NullType()),
    Column(u'note', TEXT()),
    Column(u'bill_date', NullType()),
    Column(u'check_date', NullType()),
    Column(u'ins_paid', NullType()),
)

class Batche(DeclarativeBase):
    __tablename__ = 'batches'

    __table_args__ = {}

    #column definitions
    id = Column(u'id', INTEGER(), primary_key=True)
    name = Column(u'name', TEXT())

    #relation definitions


class Client1(DeclarativeBase):
    __tablename__ = 'clients'

    __table_args__ = {}

    #column definitions
    DOB = Column(u'DOB', DATE())
    DX = Column(u'DX', TEXT())
    address = Column(u'address', TEXT())
    approval = Column(u'approval', TEXT())
    batch = Column(u'batch', INTEGER())
    id = Column(u'id', INTEGER(), primary_key=True)
    ins = Column(u'ins', TEXT())
    name = Column(u'name', TEXT())
    note = Column(u'note', TEXT())
    officer = Column(u'officer', INTEGER())
    phone = Column(u'phone', TEXT())

    #relation definitions


class Group1(DeclarativeBase):
    __tablename__ = 'groups'

    __table_args__ = {}

    #column definitions
    Eval = Column(u'Eval', INTEGER())
    id = Column(u'id', INTEGER(), primary_key=True)
    name = Column(u'name', TEXT())
    rate = Column(u'rate', NullType())

    #relation definitions


class IdMap(DeclarativeBase):
    __tablename__ = 'id_map'

    __table_args__ = {}

    #column definitions
    did = Column(u'did', INTEGER())
    t = Column(u't', TEXT(), primary_key=True)
    zid = Column(u'zid', TEXT(), primary_key=True)

    #relation definitions


class Office1(DeclarativeBase):
    __tablename__ = 'offices'

    __table_args__ = {}

    #column definitions
    address = Column(u'address', TEXT())
    fax = Column(u'fax', TEXT())
    id = Column(u'id', INTEGER(), primary_key=True)
    name = Column(u'name', TEXT())
    notes = Column(u'notes', TEXT())

    #relation definitions


class Officer1(DeclarativeBase):
    __tablename__ = 'officers'

    __table_args__ = {}

    #column definitions
    email = Column(u'email', TEXT())
    id = Column(u'id', INTEGER(), primary_key=True)
    name = Column(u'name', TEXT())
    office = Column(u'office', INTEGER())

    #relation definitions


class Session1(DeclarativeBase):
    __tablename__ = 'sessions'

    __table_args__ = {}

    #column definitions
    date = Column(u'date', DATE())
    group_id = Column(u'group_id', INTEGER())
    id = Column(u'id', INTEGER(), primary_key=True)
    therapist = Column(u'therapist', TEXT())
    time = Column(u'time', TEXT())

    #relation definitions


class Visit1(DeclarativeBase):
    __tablename__ = 'visits'

    __table_args__ = {}

    #column definitions
    attend = Column(u'attend', INTEGER())
    bill_date = Column(u'bill_date', DATE())
    check_date = Column(u'check_date', DATE())
    client = Column(u'client', INTEGER())
    client_pd = Column(u'client_pd', NullType())
    id = Column(u'id', INTEGER(), primary_key=True)
    ins_paid = Column(u'ins_paid', NullType())
    note = Column(u'note', TEXT())
    session = Column(u'session', INTEGER())

    #relation definitions


