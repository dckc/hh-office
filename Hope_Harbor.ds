/*
 * Author       : hopeharbor
 * Generated on : 19-May-2011 23:08:07
 * Version      : 3.0
 */
application "Hope Harbor"
{
    allow html = true
    secured connection = true
    date format = "MM/dd/yyyy"
    time zone = "America/Chicago"
    section client11
    {
        displayname = "Clients"
        list  client_View
        {
            displayname = "Client List"
            show  all  rows  from  client 
            (
                DOB
                Name
                officer_name as "Officer"
                visits_link as "Billing"
                Invoice_link1 as "Invoice"
            )
            sort by
            (
                Name   ascending
            )
            options
            (
                display rows = 30
            )
            permission
            (
                add = true
                edit = true
                bulk edit = true
                delete = true
            )
            custom actions
            (
                "Link Visits and Sessions"
                (
                    function = fixup.link_visits(client)
                    show action in view header = true
                    show action for each record = false
                    success message = ""
                )
            )
        }

        form  client
        {
            displayname  =  "Client Entry"
            success message  =  "Added Client."
            field alignment = left
            
            column
            {
                must  have  Name
                (
                    type  =  text
                    width  =  200px
                )

                DOB
                (
                    type  =  date
                    width  =  130px
                )

                address
                (
                    type  =  textarea
                    height  =  100px
                    width  =  200px
                )

                phone
                (
                    type  =  text
                    width  =  200px
                )

                officer_name
                (
                    displayname  =  "Officer"
                    type  =  picklist
                    values  =  officer.Name
                    sortorder  =  ascending
                    width  =  206px
                )

            }
            column
            {
                Ins
                (
                    type  =  text
                    width  =  200px
                )

                Note
                (
                    type  =  textarea
                    height  =  100px
                    width  =  200px
                )

                Approval
                (
                    type  =  text
                    width  =  200px
                )

                DX
                (
                    type  =  text
                    width  =  200px
                )

                batch
                (
                    type  =  number
                    width  =  100px
                )

                id_dabble
                (
                    type  =  number
                    width  =  100px
                )

                officer_dabble
                (
                    type  =  picklist
                    values  =  officer.id_dabble
                    displayformat = [ Name ]
                    width  =  206px
                )

                visits_link
                (
                    type  =  formula
                    value  =  "<a href='#View:billing_detail?client.ID=" + ID + "'>billing</a>"
                )

                Invoice_link1
                (
                    displayname  =  "Invoice_link"
                    type  =  formula
                    value  =  "<a href='#View:Invoice?for_client=" + ID + "'>invoice</a>"
                )

            }
            actions
            {
                on add
                {
                    Submit
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Reset
                    (
                        type  =  reset
                        displayname  =  "Reset Form"
                    )
                }
                on edit
                {
                    Update
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Cancel
                    (
                        type  =  cancel
                        displayname  =  "Close Form"
                    )
                }
            }
        }

        grid  billing_detail
        {
            displayname = "Billing Detail"
            show  all  rows  from  visit 
            (
                client.Name
                session.date_field as "date"
                session.Group_Name1 as "Group"
                Attend
                rate, display total
                client_pd as "client pd", display total
                ins_paid as "ins paid $", display total
                due, display total
                note
                bill_date as "bill date"
                check_date as "check date"
                client.ID
            )
            filters 
            (
                client
            )
            group by
            (
                client.Name   ascending
                client.ID   ascending
            )
            sort by
            (
                session.date_field   ascending
            )
            options
            (
                display rows = 30
            )
            permission
            (
                add = true
                duplicate = true
                edit = true
                bulk edit = true
                delete = true
            )
        }

    }

    section group11
    {
        displayname = "Groups"
        list  group_View
        {
            displayname = "Group List"
            show  all  rows  from  group 
            (
                Eval
                (
                    width = 40px
                )
                Name
                rate
            )
            sort by
            (
                Name   ascending
            )
            options
            (
                display rows = 30
            )
            custom actions
            (
                "Link Sessions"
                (
                    function = fixup.link_sessions(group)
                    show action in view header = true
                    show action for each record = false
                    success message = ""
                )
                "Sessions"
                (
                    function = show_sessions_for_group(group)
                    show action in view header = false
                    show action for each record = true
                    success message = ""
                )
            )
        }

        form  group
        {
            displayname  =  "Group Entry"
            success message  =  "Data Added Successfully!"
            field alignment = left
            
            column
            {
                must  have  unique  Name
                (
                    type  =  text
                    width  =  200px
                )

                rate
                (
                    type  =  USD
                    width  =  100px
                )

                Eval
                (
                    type  =  checkbox
                    defaultvalue  =  false
                )

            }
            column
            {
                id_dabble
                (
                    type  =  number
                    width  =  100px
                )

            }
            actions
            {
                on add
                {
                    Submit
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Reset
                    (
                        type  =  reset
                        displayname  =  "Reset Form"
                    )
                }
                on edit
                {
                    Update
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Cancel
                    (
                        type  =  cancel
                        displayname  =  "Close Form"
                    )
                }
            }
        }

    }

    section session111
    {
        displayname = "Sign-in Sheets"
        list  session_View
        {
            displayname = "Session List"
            show  all  rows  from  session 
            (
                date_field as "Date"
                Time
                group_name as "Group"
                Therapist
            )
            sort by
            (
                date_field   descending
            )
            options
            (
                display rows = 20
            )
            custom actions
            (
                "Sign-in Sheet"
                (
                    function = show_sheet_for_session(session)
                    show action in view header = false
                    show action for each record = true
                    success message = ""
                )
                "Add visit"
                (
                    function = show_visit_form_for_session(session)
                    show action in view header = false
                    show action for each record = true
                    success message = ""
                )
            )
        }

        calendar  Session_Calendar
        {
            displayname = "Session Calendar"
            show  all  rows  from  session 
            (
                date_field as "date"
            )
            filters 
            (
                Therapist
            )
            options
            (
                show calendar based on date_field
            )
        }

        list  visit_View
        {
            displayname = "visit View"
            show  all  rows  from  visit 
            (
                session_dabble.date_field as "date"
                session
                session_dabble.group_name as "Group"
                client
                note
                client_pd as "Client Pd"
            )
            sort by
            (
                session_dabble.date_field   descending
            )
        }

        form  session
        {
            displayname  =  "Session Entry"
            success message  =  "Data Added Successfully!"
            field alignment = left
            
            column
            {
                must  have  date_field
                (
                    displayname  =  "date"
                    type  =  date
                    width  =  130px
                )

                Time
                (
                    type  =  text
                    width  =  200px
                )

                must  have  group_name
                (
                    displayname  =  "Group"
                    type  =  picklist
                    values  =  group.Name
                    sortorder  =  ascending
                    width  =  206px
                )

                Therapist
                (
                    type  =  picklist
                    values  =  {"Ratliff, Dr. Bascom",   "Maxey, Debra",   "Woody",   "Clemmons, Tamara",   "Hall, Jon",   "Amy",   "Mary C",   "Yang, Ann",   "Lowe, Kelly",   "Fry, Tori",   "Jackson, Cherlisa",   "Hardy, Lauren",   "Delhanty, Will",   "Jessi Lefholz",   "Shelton, Danyele",   "Christa",   "Delehanty, Will",   "Casey, Meghan",   "Lynda Falley",   "Parrett, Shelley",   "Kathryn Dawn",   "Foxworthy, Brian",   "Porter, Pamela",   "McLemore, Alicia",   "Hammond, Chelsea",   "April Craig",   "Susan"}
                    sortorder  =  ascending
                    width  =  206px
                )

            }
            column
            {
                id_dabble
                (
                    type  =  number
                    width  =  100px
                )

                group_dabble
                (
                    type  =  picklist
                    values  =  group.id_dabble
                    displayformat = [ Name ]
                    width  =  206px
                )

                Group_Name1
                (
                    displayname  =  "Group Name"
                    type  =  formula
                    value  =  group_name
                )

            }
            actions
            {
                on add
                {
                    on load
                    {
                        hide id_dabble;
                        hide group_dabble;
                    }
                    Submit
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                        PreSubmit = "<preoncommit><openurl><type><![CDATA[form]]></type><value><![CDATA[Sign_in_visit]]></value></openurl></preoncommit>"
                        on success
                        {
                            openUrl("#Form:Sign_in_visit?session=" + input.ID, "popup");
                        }
                    )
                    Reset
                    (
                        type  =  reset
                        displayname  =  "Reset Form"
                    )
                }
                on edit
                {
                    Update
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Cancel
                    (
                        type  =  cancel
                        displayname  =  "Close Form"
                    )
                }
            }
        }

        grid  Sign_in_sheet
        {
            displayname = "Sign in sheet"
            show  all  rows  from  visit 
            (
                session.ID
                session.date_field as "date"
                session.Group_Name1 as "Group Name"
                client
                Attend
                client_pd as "client pd"
                note
            )
            filters 
            (
                bill_date
                check_date
            )
            permission
            (
                add = true
                edit = true
                bulk edit = true
                delete = true
            )
        }

    }

    section officer11
    {
        displayname = "Officers"
        list  officer_View
        {
            displayname = "Officer List"
            show  all  rows  from  officer 
            (
                Name
                email
                office_name as "Office"
                office_dabble
            )
            sort by
            (
                Name   ascending
            )
            options
            (
                display rows = 40
            )
            custom actions
            (
                "Link Clients"
                (
                    function = fixup.link_clients(officer)
                    show action in view header = true
                    show action for each record = false
                    success message = ""
                )
            )
        }

        list  office_View
        {
            displayname = "Office List"
            show  all  rows  from  office 
            (
                Name
                fax
                notes
            )
            custom actions
            (
                "Link Officers"
                (
                    function = fixup.link_officers(office)
                    show action in view header = true
                    show action for each record = false
                    success message = ""
                )
            )
        }

        form  officer
        {
            displayname  =  "Officer Entry"
            success message  =  "Data Added Successfully!"
            field alignment = left
            
            column
            {
                must  have  unique  Name
                (
                    type  =  text
                    width  =  200px
                )

                email
                (
                    type  =  email
                    width  =  200px
                )

                office_name
                (
                    displayname  =  "Office"
                    type  =  picklist
                    values  =  office.Name
                    allow new entries = true
                    [
                        displayname = "office"
                    ]
                    sortorder  =  ascending
                    width  =  206px
                )

            }
            column
            {
                unique  id_dabble
                (
                    type  =  number
                    width  =  100px
                )

                office_dabble
                (
                    type  =  picklist
                    values  =  office.id_dabble
                    displayformat = [ Name ]
                    width  =  206px
                )

            }
            actions
            {
                on add
                {
                    Submit
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Reset
                    (
                        type  =  reset
                        displayname  =  "Reset Form"
                    )
                }
                on edit
                {
                    Update
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Cancel
                    (
                        type  =  cancel
                        displayname  =  "Close Form"
                    )
                }
            }
        }

        form  office
        {
            displayname  =  "Office Entry"
            success message  =  "Data Added Successfully!"
            field alignment = left
            
            column
            {
                must  have  unique  Name
                (
                    type  =  text
                    width  =  200px
                )

                fax
                (
                    type  =  text
                    width  =  200px
                )

                address
                (
                    type  =  textarea
                    height  =  100px
                    width  =  200px
                )

            }
            column
            {
                id_dabble
                (
                    type  =  number
                    width  =  100px
                )

                notes
                (
                    type  =  textarea
                    height  =  100px
                    width  =  200px
                )

            }
            actions
            {
                on add
                {
                    Submit
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Reset
                    (
                        type  =  reset
                        displayname  =  "Reset Form"
                    )
                }
                on edit
                {
                    Update
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Cancel
                    (
                        type  =  cancel
                        displayname  =  "Close Form"
                    )
                }
            }
        }

    }

    section Reports
    {
        list  attendance
        {
            displayname = "Attendance with Officers"
            show  all  rows  from  visit 
            (
                session_dabble.date_field as "date"
                Attend
                rate as "Rate", display total
                client_pd as "Client Pd", display total
                ins_paid as "Ins Paid $", display total
                due as "Due", display total
                note as "Note"
                session_dabble.group_name as "Group"
                client
                client.officer_name as "Officer"
            )
            group by
            (
                session_dabble.group_name   ascending
                client   ascending
                client.officer_name   ascending
            )
            sort by
            (
                session_dabble.date_field   ascending
            )
            options
            (
                display rows = 50
            )
        }

        htmlpage Attendance_pagination_test()
displayname = "Attendance pagination test"
print = true
pdf = true
content
        <%{%>
<div elName='zc-component' viewLinkName='attendance' params='zc_Header=false&amp;zc_Footer=false&amp;zc_SecHeader=false&amp;zc_AddRec=false&amp;zc_EditRec=false&amp;zc_DelRec=false&amp;zc_DuplRec=false&amp;zc_EditBulkRec=false&amp;zc_Filter=false&amp;zc_Search=false&amp;zc_Paging=false&amp;zc_ColMenu=false&amp;zc_Summary=false&amp;zc_RecSelect=false&amp;zc_SaveRec=false'>Loading View...</div>         <%}%>

    }

    section Utility
    {
        hide = true
        form  visit
        {
            field alignment = left
            
            column
            {
                session
                (
                    type  =  picklist
                    values  =  session.ID
                    displayformat = [ Group_Name1 + " - " + date_field ]
                    allow new entries = true
                    [
                        displayname = "Add session"
                    ]
                    width  =  206px
                )

                client
                (
                    type  =  picklist
                    values  =  client.ID
                    displayformat = [ Name ]
                    allow new entries = true
                    [
                        displayname = "Add client"
                    ]
                    width  =  206px
                )

                Attend
                (
                    type  =  checkbox
                    defaultvalue  =  true
                )

                client_pd
                (
                    displayname  =  "client pd"
                    type  =  USD
                    width  =  100px
                )

                note
                (
                    type  =  textarea
                    height  =  100px
                    width  =  200px
                )

                bill_date
                (
                    displayname  =  "bill date"
                    type  =  date
                    width  =  130px
                )

                check_date
                (
                    displayname  =  "check date"
                    type  =  date
                    width  =  130px
                )

                ins_paid
                (
                    displayname  =  "ins paid $"
                    type  =  USD
                    width  =  100px
                )

            }
            column
            {
                id_dabble
                (
                    type  =  number
                    width  =  100px
                )

                session_dabble
                (
                    type  =  picklist
                    values  =  session.id_dabble
                    displayformat = [ Group_Name1 ]
                    width  =  206px
                )

                client_dabble
                (
                    type  =  picklist
                    values  =  client.id_dabble
                    displayformat = [ Name ]
                    width  =  206px
                )

                due
                (
                    type  =  formula
                    value  =  (thisapp.session_rate(session_dabble)  -  if((client_pd  ==  null),0.0,client_pd)  -  if((ins_paid  ==  null),0.0,ins_paid))
                )

                rate
                (
                    type  =  formula
                    value  =  thisapp.session_rate(session_dabble)
                )

            }
            actions
            {
                on add
                {
                    on load
                    {
                        hide id_dabble;
                        hide session_dabble;
                        hide client_dabble;
                    }
                    Submit
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Reset
                    (
                        type  =  reset
                        displayname  =  "Reset Form"
                    )
                }
                on edit
                {
                    Update
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Cancel
                    (
                        type  =  cancel
                        displayname  =  "Close Form"
                    )
                }
            }
        }

        form  Sign_in_visit
        {
            displayname  =  "Sign in visit"
            store data in zc = false
            success message  =  "Data Added Successfully!"
            field alignment = left
            
            column
            {
                session
                (
                    displayname  =  "Session"
                    type  =  picklist
                    values  =  session.ID
                    displayformat = [ Group_Name1 + " - " + date_field ]
                    sortorder  =  ascending
                    width  =  206px
                )

                must  have  Client
                (
                    type  =  picklist
                    values  =  client.ID
                    displayformat = [ Name ]
                    allow new entries = true
                    [
                        displayname = "client"
                    ]
                    sortorder  =  ascending
                    width  =  206px
                )

                Client_pd
                (
                    displayname  =  "Client pd"
                    type  =  USD
                    width  =  100px
                )

            }
            column
            {
                Attend
                (
                    type  =  checkbox
                    defaultvalue  =  true
                )

                Note
                (
                    type  =  textarea
                    height  =  100px
                    width  =  200px
                )

            }
            actions
            {
                on load
                {
                    disable session;
                }
                add
                (
                    type  =  button
                    displayname  =  "Save and Add Another"
                    on click
                    {
                        insert into visit
                        [
                            Added_User = zoho.loginuser
                            Attend = input.Attend
                            client = input.Client
                            client_pd = input.Client_pd
                            note = input.Note
                            session = input.session
                        ]
                        openUrl("#Form:Sign_in_visit?session=" + input.session, "Popup window");
                    }
                )
                Save_and_Close
                (
                    type  =  submit
                    displayname  =  "Save and Close"
                    on click
                    {
                        insert into visit
                        [
                            Added_User = zoho.loginuser
                            Attend = input.Attend
                            client = input.Client
                            client_pd = input.Client_pd
                            note = input.Note
                            session = input.session
                        ]
                        openUrl("#Script:page.close", "same window");
                    }
                )
            }
        }

        form  batch
        {
            field alignment = left
            
            Name
            (
                type  =  text
                width  =  200px
            )

            actions
            {
                on add
                {
                    Submit
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Reset
                    (
                        type  =  reset
                        displayname  =  "Reset Form"
                    )
                }
                on edit
                {
                    Update
                    (
                        type  =  submit
                        displayname  =  "Save Changes"
                    )
                    Cancel
                    (
                        type  =  cancel
                        displayname  =  "Close Form"
                    )
                }
            }
        }

        summary  officer_Summary1
        {
            displayname = "officer Summary"
            show  all  rows  from  officer 
            (
                Name
                email
                id_dabble
                office_name as "Office"
                office_dabble
            )
        }

        summary  officer_Summary
        {
            displayname = "officer Summary"
            show  all  rows  from  officer 
            (
                Name
                email
            )
            permission
            (
                add = true
                duplicate = true
                edit = true
                bulk edit = true
                delete = true
            )
        }

        summary  client_Summary
        {
            displayname = "client Summary"
            show  all  rows  from  client 
            (
                Name
                Ins
                Approval
                DX
                Note
                address
                phone
                DOB
                id_dabble
                batch
                officer_dabble
                officer_name as "Officer"
                visits_link
                Invoice_link1 as "Invoice_link"
            )
            filters 
            (
                DOB
            )
            permission
            (
                add = true
                duplicate = true
                edit = true
                bulk edit = true
                delete = true
            )
        }

        summary  client_Summary1
        {
            displayname = "client Summary"
            show  all  rows  from  client 
            (
                Name
                Ins
                Approval
                DX
                Note
                address
                phone
                DOB
            )
            filters 
            (
                DOB
            )
        }

        summary  office_Summary1
        {
            displayname = "office Summary"
            show  all  rows  from  office 
            (
                Name
                fax
                address
                notes
            )
        }

        summary  session_Summary
        {
            displayname = "session Summary"
            show  all  rows  from  session 
            (
                date_field as "date"
                id_dabble
                Therapist
                Time
                group_name as "Group Name"
                group_dabble
                Group_Name1 as "Group Name"
            )
            filters 
            (
                Therapist
            )
        }

        summary  group_Summary
        {
            displayname = "group Summary"
            show  all  rows  from  group 
            (
                Name
                rate
                id_dabble
                Eval
            )
        }

    }

    section Testing
    {
        grid  Client_Entry
        {
            displayname = "Client Bulk Edit"
            show  all  rows  from  client 
            (
                Name
                address
                Note
                DX
                Ins
                Approval
                phone
                DOB
                batch
            )
            filters 
            (
                DOB
            )
            permission
            (
                add = true
                duplicate = true
                edit = true
                bulk edit = true
                delete = true
            )
        }

        form  Clear_Forms
        {
            displayname  =  "Clear Forms"
            store data in zc = false
            success message  =  "Data Added Successfully!"
            field alignment = left
            
            column
            {
                visits
                (
                    type  =  number
                    width  =  100px
                )

                sessions
                (
                    type  =  number
                    width  =  100px
                )

                clients
                (
                    type  =  number
                    width  =  100px
                )

                officers
                (
                    type  =  number
                    width  =  100px
                )

                offices
                (
                    type  =  number
                    width  =  100px
                )

                groups
                (
                    type  =  number
                    width  =  100px
                )

            }
            column
            {
                delete_all_visits
                (
                    displayname  =  "Delete all visits?"
                    type  =  checkbox
                    defaultvalue  =  false
                )

                delete_all_sessions
                (
                    displayname  =  "Delete all sessions?"
                    type  =  checkbox
                    defaultvalue  =  false
                )

                delete_all_clients
                (
                    displayname  =  "Delete all clients?"
                    type  =  checkbox
                    defaultvalue  =  false
                )

                delete_all_officers
                (
                    displayname  =  "Delete all officers?"
                    type  =  checkbox
                    defaultvalue  =  false
                )

                delete_all_offices
                (
                    displayname  =  "Delete all offices?"
                    type  =  checkbox
                    defaultvalue  =  false
                )

                delete_all_groups
                (
                    displayname  =  "Delete all groups?"
                    type  =  checkbox
                    defaultvalue  =  false
                )

            }
            actions
            {
                on load
                {
                    input.visits = count(visit[ID != 0]);
                    input.sessions = count(session[ID != 0]);
                    input.clients = count(client[ID != 0]);
                    input.officers = count(officer[ID != 0]);
                    input.offices = count(office[ID != 0]);
                    input.groups = count(group[ID != 0]);
                    disable visits;
                    disable sessions;
                    disable clients;
                    disable officers;
                    disable offices;
                    disable groups;
                }
                Delete_All
                (
                    type  =  submit
                    displayname  =  "Delete All"
                    tooltip  =  "\n"
                    on click
                    {
                        if (input.delete_all_visits)
                        {
                            delete from visit[ ID != 0 ];
                        }
                        if (input.delete_all_sessions)
                        {
                            delete from session[ ID != 0 ];
                        }
                        if (input.delete_all_clients)
                        {
                            delete from client[ ID != 0 ];
                        }
                        if (input.delete_all_officers)
                        {
                            delete from officer[ ID != 0 ];
                        }
                        if (input.delete_all_offices)
                        {
                            delete from office[ ID != 0 ];
                        }
                        if (input.delete_all_groups)
                        {
                            delete from group[ ID != 0 ];
                        }
                    }
                )
                Reset
                (
                    type  =  reset
                    displayname  =  "Reset"
                )
            }
        }

        htmlpage Invoice_Exploration()
displayname = "Invoice Exploration"
print = true
pdf = true
content
        <%{%>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title></title>
<link href="l1t1c2sda.css" rel="stylesheet" type="text/css" />
<table id="customizeContentArea" width="100%" border="0" cellpadding="0" cellspacing="0">
    <tbody>
        <tr>
            <td><!-- Company Name and Address -->
            <table id="customizeContentArea2" width="100%" border="0" cellpadding="0" cellspacing="0">
                <tbody>
                    <tr>
                        <td width="47%">logo</td>
                        <td width="53%" align="right" valign="top">Associates at Hope Harbor , <br />
                        CompanyStreetAddress1 , <br />
                        CompanyStreetAddress2 , <br />
                        CompanyCity , <br />
                        CompanyState   CompanyPostalCode , <br />
                        CompanyCountry .</td>
                    </tr>
                    <tr height="20">
                        <td colspan="2"><hr />
                        </td>
                    </tr>
                    <tr>
                        <td><!-- Bill To Address -->
                        <table width="70%" border="0" cellpadding="2" cellspacing="0" class="zc-summarytable-template">
                            <tbody>
                                <tr>
                                    <td class="zc-viewrowheader-template"><strong>Bill To</strong></td>
                                </tr>
                                <tr>
                                    <td>CustomerName ,<br />
                                    CustomerBillToAddress ,<br />
                                    CustomerBillToCity ,<br />
                                    CustomerBillToState ,<br />
                                    CustomerBillToCountry ,<br />
                                    ContactEMailIds .</td>
                                </tr>
                            </tbody>
                        </table>
                        <br />
                        <!-- Ship To Address -->
                        <table width="70%" border="0" cellpadding="2" cellspacing="0" class="zc-summarytable-template">
                            <tbody>
                                <tr>
                                    <td class="zc-viewrowheader-template"><strong>Ship To</strong></td>
                                </tr>
                                <tr>
                                    <td>CustomerShipToAddress ,<br />
                                    CustomerShipToCity ,<br />
                                    CustomerShipToState ,<br />
                                    CustomerShipToCountry ,<br />
                                    CustomerShipToCode .</td>
                                </tr>
                            </tbody>
                        </table>
                        </td>
                        <td valign="top" align="right"><!--  Items list -->
                        <table width="56%" border="0" cellpadding="5" cellspacing="0" class="zc-summarytable-template">
                            <tbody>
                                <tr>
                                    <td width="35%" class="zc-summary-label-template"><strong>Invoice #</strong></td>
                                    <td width="65%" class="zc-summary-data-template">InvoiceNumber</td>
                                </tr>
                                <tr>
                                    <td class="zc-summary-label-template"><strong>Invoice Date </strong></td>
                                    <td class="zc-summary-data-template">InvoiceDate</td>
                                </tr>
                                <tr>
                                    <td class="zc-summary-label-template"><strong>Terms</strong></td>
                                    <td class="zc-summary-data-template">NetTerms</td>
                                </tr>
                                <tr>
                                    <td class="zc-summary-label-template"><strong>Due Date </strong></td>
                                    <td class="zc-summary-data-template">DueDate</td>
                                </tr>
                                <tr>
                                    <td class="zc-summary-label-template"><strong>P.O. # </strong></td>
                                    <td class="zc-summary-data-template">P.O.Number</td>
                                </tr>
                            </tbody>
                        </table>
                        </td>
                    </tr>
                    <tr>
                        <td valign="top" align="right">&nbsp;</td>
                    </tr>
                    <tr>
                        <td colspan="2">
                        <table width="100%" border="0" cellpadding="5" cellspacing="0">
                            <thead>
                                <tr>
                                    <th align="left" class="zc-viewrowheader-template">Item</th>
                                    <th align="left" class="zc-viewrowheader-template">Description</th>
                                    <th class="zc-viewrowheader-template" align="right">Qty.</th>
                                    <th class="zc-viewrowheader-template" align="right">Rate</th>
                                    <th class="zc-viewrowheader-template" align="right">Discount</th>
                                    <th class="zc-viewrowheader-template" align="right">Amount</th>
                                </tr>
                                <tr class="zc-viewrow zc-row-1">
                                    <td align="left" czc-viewrow="" zc-row-1="">ItemName</td>
                                    <td align="left">ItemDescription</td>
                                    <td align="right">ItemQty</td>
                                    <td align="right">ItemRate</td>
                                    <td align="right">ItemDiscount</td>
                                    <td align="right">ItemAmount</td>
                                </tr>
                                <tr class="zc-viewrow zc-row-1">
                                    <td>&nbsp;</td>
                                    <td>&nbsp;</td>
                                    <td align="right">&nbsp;</td>
                                    <td align="right">&nbsp;</td>
                                    <td align="right">&nbsp;</td>
                                    <td align="right">&nbsp;</td>
                                </tr>
                                <tr>
                                    <td width="32%" colspan="6">&nbsp;</td>
                                </tr>
                            </thead>
                        </table>
                        <!--  Notes -->
                        <table width="100%" border="0" cellpadding="5" cellspacing="0">
                            <tbody>
                                <tr>
                                    <td width="64%" valign="top">Notes</td>
                                    <td width="36%" valign="top"><!--  Total and Balance Due Calculations -->
                                    <table width="100%" border="0" cellpadding="5" cellspacing="0">
                                        <tbody>
                                            <tr class="zc-viewrow zc-row-1">
                                                <td width="9%" align="right">SubTotal</td>
                                                <td width="17%" align="right">InvoiceSubTotal</td>
                                            </tr>
                                            <tr class="zc-viewrow zc-row-1">
                                                <td align="right">TaxName</td>
                                                <td align="right">TaxValue</td>
                                            </tr>
                                            <tr class="zc-viewrow zc-row-1">
                                                <td align="right"><b>Total</b></td>
                                                <td align="right">InvoiceTotal</td>
                                            </tr>
                                            <tr class="zc-viewrow zc-row-1">
                                                <td align="right">Late Fee</td>
                                                <td align="right">LateFee</td>
                                            </tr>
                                            <tr class="zc-viewrow zc-row-1">
                                                <td align="right">Payment Made</td>
                                                <td align="right">PaymentMade</td>
                                            </tr>
                                            <tr class="zc-viewrow zc-row-1">
                                                <td align="right"><strong>Balance Due</strong></td>
                                                <td align="right">InvoiceBalance</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        </td>
                    </tr>
                    <tr>
                        <td height="40" colspan="2">&nbsp;</td>
                    </tr>
                    <tr>
                        <!--  Terms and Conditions -->
                        <td colspan="2"><strong>Terms and Conditions</strong>                                                         <br />
                        <br />
                        TermsAndConditions</td>
                    </tr>
                </tbody>
            </table>
            </td>
        </tr>
    </tbody>
</table>
<style type="text/css">

*.zc-viewtable { 
        width : 100%;
        border-top : none;
        border-right : 1px solid rgb(93,155,215);
        border-left : 1px solid rgb(93,155,215);
        border-bottom : 1px solid rgb(93,155,215);
}
*.zc-viewheader { 
        background-color : rgb(127, 190, 251);
        padding : 5px 5px;
        text-align : left;
        border-top : 1px solid rgb(93,155,215);
        border-left : 1px solid rgb(93,155,215);
        border-right : 1px solid rgb(93,155,215);
        border-bottom : 1px solid rgb(93,155,215);
        background-image : none;
}
*.zc-viewheader-height { 
        height : 25px;
} 
.zc-viewrowheader-template
{
        background-color : rgb(127, 190, 251);
        padding : 5px 5px;
        text-align : left;
        border-top : 1px solid rgb(93,155,215);
        border-left : 1px solid rgb(93,155,215);
        border-right : 1px solid rgb(93,155,215);
        border-bottom : 1px solid rgb(93,155,215);
        background-image : none;
} 

*.zc-viewrow td { 
        border-left : none;
        border-bottom : 1px solid rgb(205,228,249);
        border-right : 1px solid rgb(205,228,249);
        vertical-align : middle;
        white-space : nowrap;
        height : 27px;
        font-size : 12px;
        padding : 3px;
} 
*.zc-row-1 { 
        background-color : rgb(255, 255, 255);
} 
.zc-summarytable-template
{
        border:1px solid #CFE2A9;
}
.zc-summary-label-template
{
        font: 12px Arial, Helvetica, sans-serif;
        background-color :rgb(127, 190, 251);
        border-bottom:1px solid #DBEBBB;
        border-right:1px solid #DBEBBB;
        height:25px;
}

.zc-summary-data-template
{
        font: 12px Arial, Helvetica, sans-serif;
        height:25px;
        background-color:#FFFFFF;
        border-bottom:1px solid #DBEBBB;
}

</style></meta>        <%}%>

        htmlpage HTML_PDF_Test()
displayname = "HTML PDF Test"
print = true
pdf = true
content
        <%{%>
<table>
<thead><th>Name</th><th>Fax</th></thead>
<tbody>
 <%for each office in office sort by  Name 
            {%>
   <tr>
    <td><%=office.Name%></td>
    <td><%=office.fax%></td>
    <td><%=office.ID%></td>
    <td><%=office.id_dabble%></td>
   </tr>
                    <%}%>
</tbody>
</table>
        <%}%>

        list  Attendance_Flat
        {
            displayname = "Attendance Flat"
            show  all  rows  from  visit 
            (
                client.Name
                session.date_field as "date"
                session.Group_Name1 as "Group Name"
                Attend
                client_pd as "client pd"
                ins_paid as "ins paid $"
                note
                bill_date as "bill date"
                check_date as "check date"
            )
            filters 
            (
                bill_date
                check_date
            )
            sort by
            (
                client.Name   ascending
                session.date_field   descending
            )
        }

        htmlpage Invoice(for_client)
print = true
pdf = true
content
        <%{
            for each who in client  [ID == input.for_client.toLong()]
            {
                subtot = visit[(client == who.ID && Attend)].sum(rate);
                client_pd = visit[client == who.ID].sum(client_pd);
                ins_pd = visit[client == who.ID].sum(ins_paid);
                if (ins_pd  <  0)
                {
                    // umm... what's up here?!?
                    ins_pd = 0.0;
                }
                amount_due = (subtot  -  client_pd  -  ins_pd);%>
<style type="text/css">
.body { font-size: 10pt }

div.letterhead {
 border-style: solid;
 padding: 0.5em;
 margin: 0;
 }

h1 {
 float: right; font-family: sans; font-style: italic
 }

h2 {
 font-family: sans;
 font-weight: normal;
 }


.logo { float: left }

table.fields {
 margin-top: 2em;
 margin-bottom: 2em;
 margin-left: 2em;
}

.error { color: red }

@media print {
 input { border: none }
}

thead { display: table-header-group; }
tfoot { display: table-footer-group; }

table.fields tbody tr th {
 text-align: left;
 padding-right: 3em;
 }

table.rows  {
 border: 1px solid gray;
 margin-left: 2em;
 width: 80%;
 }

table.rows th, table.rows td { padding: 0 0.5em;
  border-bottom: 1px solid #DDD;
  border-right: 1px solid gray;
}

th { font-weight: normal }

.amt { text-align: right }

th.tot {
 text-align: left;
 font-weight: bold;
 }


address {
 text-align: center;
 font-size: smaller;
 font-family: serif;
 font-style: normal;
 margin-top: 4em;
 float: bottom;
 }

</style>
<div class="body">
<div class="letterhead">
 <h1>Invoice</h1>
 <div class="hcard">
 <!-- TODO span class="logo">/\</span -->
 <h2 class="org">Associates at Hope Harbor</h2>
 <span class="fn">Dr. Bascom Ratliff, DSW</span> *
 <span>Mary Connolly, BA</span> <!-- hcard agent? hm. -->
 <br clear="all" />
 </div>
</div>

<table class="fields">

<tbody>
<tr><th>Date:</th><td id="date"><%=zoho.currentdate%></td></tr>
<tr>
  <th>Client Name:</th>
  <td><%=who.Name%>
  </td>
</tr>
<tr><th>Amount Due:</th><td id="due1" class="amt_"><%=thisapp.fmt.currency(amount_due)%></td></tr>
</tbody>
</table>
</form>

<table class="rows">
<thead>
<tr>
 <th>Service Date</th>
 <th>Description</th>
 <th>Amount Billed</th>
</tr>
<tr><td> </td><td> </td><td> </td></tr>
</thead>

<tbody id="fill">
<%for each item in visit  [(client = who.ID && Attend)]
                {
                    its_session  =  session  [ID = item.session];%>
<tr>
    <td><%=its_session.date_field%></td>
    <td><%=its_session.group_name%></td>
    <td class="amt"><%=thisapp.fmt.currency(item.rate)%></td>
</tr>
                                                                        <%}%>
</tbody>

<tbody>
<tr><td> </td><td> </td><td> </td></tr>
<tr>
  <th class="tot">SUBTOTAL</th><td> </td>
  <td id="subtot" class="amt"><%=thisapp.fmt.currency(subtot)%></td>
</tr>
<tr>
  <th class="tot">Paid by Client</th><td> </td>
  <td id="pd" class="amt"><%=thisapp.fmt.currency(client_pd)%></td>
</tr>
<tr>
  <th class="tot">Paid by Insurance</th><td> </td>
  <td id="ins" class="amt"><%=thisapp.fmt.currency(ins_pd)%></td>
</tr>
<tr>
  <th class="tot">Amount Due:</th><td> </td>
  <td id="due" class="amt"><%=thisapp.fmt.currency(amount_due)%></td>
</tr>
</tbody>
</table>

<address>
  <!-- TODO: hcard again -->
  Mailing: P.O. Box 26374, Shawnee Mission, KS 66225 *
  <a href="http://www.hopeharborkc.com/">www.hopeharborkc.com</a><br />
  Office: 913-710-5744 / Fax 913-681-5949<br />
  Location 1: 10201 W. 127<sup>th</sup> St. (Grace Fellowship church)<br />
  Location 2: 3730 Metropolitan Ave, KC KS 66106 (United Methodist Church)
</address>


</div>
                                        <%}
        }%>

    }

    functions
    {
        string session_group(int sid)
        {
            //s  =  session  [ID == input.sid];
            //g  =  group  [ID = s.group_id];
            //return g.Name;
            return "@@";
        }

        int fixup.link_sessions(group g)
        {
            qty = count(session[(group_dabble == g.id_dabble && (group_name is null))]);
            if (qty  >  0)
            {
                for each linked_session in session  [(group_dabble == g.id_dabble && (group_name is null))] range from 1 to 1000
                {
                    linked_session.group_name = g.Name;
                }
                info g.Name + ": " + qty;
            }
            return qty;
        }

        int fixup.link_officers(office where)
        {
            qty = count(officer[(office_dabble == where.id_dabble && (office_name is null))]);
            if (qty  >  0)
            {
                for each who in officer  [(office_dabble == where.id_dabble && (office_name is null))] sort by  Name  range from 1 to 1000
                {
                    who.office_name = where.Name;
                }
                info where.Name + ": " + qty;
            }
            return qty;
        }

        float session_rate(int session_dabble)
        {
            gn = session[id_dabble = input.session_dabble].group_name;
            r = group[Name = gn].rate;
            return if((r  ==  null),0.0,r);
        }

        int fixup.link_clients(officer target)
        {
            qty = count(client[(officer_dabble == target.id_dabble && (officer_name is null))]);
            if (qty  >  0)
            {
                for each src in client  [(officer_dabble == target.id_dabble && (officer_name is null))]
                {
                    src.officer_name = target.Name;
                }
                info ((target.Name) + ": ") + qty;
            }
            return qty;
        }

        int fixup.link_visits(client who)
        {
            qty = count(visit[(client_dabble == who.id_dabble && ((client is null) || (session is null)))]);
            if (qty  >  0)
            {
                for each linked_visit in visit  [(client_dabble == who.id_dabble && ((client is null) || (session is null)))]
                {
                    linked_session = session[id_dabble = linked_visit.session_dabble].ID;
                    linked_visit.session = linked_session;
                    linked_visit.client = who.ID;
                }
                info who.Name + ": " + qty;
            }
            return qty;
        }

        void show_sessions_for_group(group choice)
        {
            // cf http://kbase.creator.zoho.com/forms/search-interface
            target = "#View:session_View?group_name=" + choice.Name;
            openUrl(target, "samewindow");
        }

        void show_sheet_for_session(session choice)
        {
            // cf http://kbase.creator.zoho.com/forms/search-interface
            target = "#View:Sign_in_sheet?session.ID=" + choice.ID;
            openUrl(target, "samewindow");
        }

        void show_visit_form_for_session(session choice)
        {
            openUrl("#Form:Sign_in_visit?session=" + choice.ID, "Popup window");
        }

        string fmt.currency(float amt)
        {
            // ack: Yoge (Moderator) on 13-Sep-2010 09:32 AM
            // http://forums.zoho.com/topic/amount-display
            formatted_number = (input.amt.toString()).replaceAll(("(?<!\.\d)(?<=\d)(?=(?:\d\d\d)+\b)"),",");
            // trailing 0
            if ((formatted_number).replaceAll("(\.\d)$","")  !=  formatted_number)
            {
                formatted_number = formatted_number + "0";
            }
            return formatted_number;
        }

    }

    customize
    {
        layout = "drop down menu"
        base theme = "headerimage"
        color = "light green"
    }
}
